{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","part1","part2","nodeName","id","body","document","querySelector","printMessage","message","notification","insertAdjacentHTML","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAC5BK,IAAAA,EAAkBL,UAAAA,OAAAA,EAAxB,oBACMM,EAAYP,IAAAA,OAAAA,EAAQQ,SAAiBR,UAAAA,OAAAA,EAAQS,GAAnD,KAEAN,EAAQG,EAAQC,OAKtB,IAAMG,EAAOC,SAASC,cAAc,QAE9BC,EAAe,SAACC,GACdC,IAAAA,EAEAD,sCAAAA,OAAAA,EAFN,oBAMAJ,EAAKM,mBAAmB,aAAcD,IAGxCE,OAAOC,QAAU,CACfnB,QAAAA,EACAc,aAAAA","file":"main.2a143f63.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      const part1 = `It was ${eventName} on the element:`;\n      const part2 = ` ${element.nodeName}, id: ${element.id}.`;\n\n      resolve(part1 + part2);\n    });\n  });\n}\n\nconst body = document.querySelector('body');\n\nconst printMessage = (message) => {\n  const notification = `\n    <div class=\"message\">\n      ${message}\n    </div>\n  `;\n\n  body.insertAdjacentHTML('afterbegin', notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}